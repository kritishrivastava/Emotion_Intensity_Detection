java -Xmx4G -cp $HOME/weka-3-8-1/weka.jar weka.Run weka.classifiers.meta.FilteredClassifier -t data/anger-ratings-0to1.train.arff -T data/anger-ratings-0to1.test.target.arff -classifications "weka.classifiers.evaluation.output.prediction.CSV -use-tab -p first-last -file data/anger-pred.csv" -F "weka.filters.MultiFilter -F \"weka.filters.unsupervised.attribute.TweetToEmbeddingsFeatureVector -I 2 -B $HOME/wekafiles/packages/AffectiveTweets/resources/w2v.twitter.edinburgh.100d.csv.gz -S 0 -K 15 -L -O\" -F \"weka.filters.unsupervised.attribute.TweetToLexiconFeatureVector -I 2 -A -D -F -H -J -L -N -P -Q -R -T -U -O\" -F \"weka.filters.unsupervised.attribute.TweetToSentiStrengthFeatureVector -I 2 -U -O\" -F \"weka.filters.unsupervised.attribute.Reorder -R 5-last,4\"" -W weka.classifiers.functions.LibLINEAR -- -S 12 -C 1.0 -E 0.001 -B 1.0 -L 0.1 -I 1000

///////////////////////////////////////////////////////

To Do:
 we have our own system, (read about our system)
so what we need to do is to select the right features(figure out the weka system and how to select the features)
apply the selected features to our baseline system and see if we can improve on that

///////////////////////////////////////////////////////
Weka note
go to ./Applications folder, not fluffy/ Applications folder
use ls -a to see weka-3-9-1

////////////original/////////////////////////////////
java -Xmx4G -cp weka.jar weka.Run weka.classifiers.meta.FilteredClassifier -t data/emoint_baseline/anger-ratings-0to1.train.arff -T data/emoint_baseline/anger-ratings-0to1.test.target.arff -classifications "weka.classifiers.evaluation.output.prediction.CSV -use-tab -p first-last -file data/emoint_baseline/results/anger-pred.csv" -F "weka.filters.MultiFilter -F \"weka.filters.unsupervised.attribute.TweetToLexiconFeatureVector -I 2 -A -D -F -H -J -L -N -P -Q -R -T -U -stemmer weka.core.stemmers.NullStemmer -stopwords-handler \\\"weka.core.stopwords.Null \\\" -tokenizer \\\"weka.core.tokenizers.TweetNLPTokenizer \\\"\" -F \"weka.filters.unsupervised.attribute.Reorder -R 5-last,4\"" -W weka.classifiers.functions.LibLINEAR -- -S 12 -C 1.0 -E 0.001 -B 1.0 -L 0.1 -I 1000

//////////////////////spaced/////////////////////////
java -Xmx4G
    -cp weka.jar weka.Run weka.classifiers.meta.FilteredClassifier
    -t data/emoint_baseline/anger-ratings-0to1.train.arff
    -T data/emoint_baseline/anger ratings-0to1.test.target.arff
    -classifications
"weka.classifiers.evaluation.output.prediction.CSV -use-tab -p first-last -file data/emoint_baseline/results/anger-pred.csv"
    -F "weka.filters.MultiFilter
    -F \"weka.filters.unsupervised.attribute.TweetToLexiconFeatureVector
    -I 2 -A -D -F -H -J -L -N -P -Q -R -T -U
    -stemmer weka.core.stemmers.NullStemmer
    -stopwords-handler \\\"weka.core.stopwords.Null \\\"
    -tokenizer \\\"weka.core.tokenizers.TweetNLPTokenizer \\\"\"
    -F \"weka.filters.unsupervised.attribute.Reorder -R 5-last,4\""
    -W weka.classifiers.functions.LibLINEAR -- -S 12 -C 1.0 -E 0.001 -B 1.0 -L 0.1 -I 1000

/////////////////////new////////////////////////////
java -Xmx4G -cp weka.jar weka.Run weka.classifiers.meta.FilteredClassifier -t data/emoint_baseline/anger-ratings-0to1.train.arff -T data/emoint_baseline/anger-ratings-0to1.test.target.arff -classifications "weka.classifiers.evaluation.output.prediction.CSV -use-tab -p first-last -file data/emoint_baseline/results/anger-pred.csv" -F "weka.filters.MultiFilter -F \"weka.filters.unsupervised.attribute.TweetToLexiconFeatureVector -I 2 -A -D -F -H -J -L -N -P -Q -R -T -U -W weka.classifiers.functions.LibLINEAR -- -S 12 -C 1.0 -E 0.001 -B 1.0 -L 0.1 -I 1000

//// emoInt
java -Xmx4G -cp $/Applications/weka-3-9-1/weka.jar weka.Run weka.classifiers.meta.FilteredClassifier -t data/anger-ratings-0to1.train.arff -T data/anger-ratings-0to1.test.target.arff -classifications "weka.classifiers.evaluation.output.prediction.CSV -use-tab -p first-last -file data/anger-pred.csv" -F "weka.filters.MultiFilter -F \"weka.filters.unsupervised.attribute.TweetToEmbeddingsFeatureVector -I 2 -B $HOME/wekafiles/packages/AffectiveTweets/resources/w2v.twitter.edinburgh.100d.csv.gz -S 0 -K 15 -L -O\" -F \"weka.filters.unsupervised.attribute.TweetToLexiconFeatureVector -I 2 -A -D -F -H -J -L -N -P -Q -R -T -U -O\" -F \"weka.filters.unsupervised.attribute.TweetToSentiStrengthFeatureVector -I 2 -U -O\" -F \"weka.filters.unsupervised.attribute.Reorder -R 5-last,4\"" -W weka.classifiers.functions.LibLINEAR -- -S 12 -C 1.0 -E 0.001 -B 1.0 -L 0.1 -I 1000

///my emoInt

java -Xmx4G -cp weka.jar weka.Run weka.classifiers.meta.FilteredClassifier -t data/anger-ratings-0to1.train.arff -T data/anger-ratings-0to1.test.target.arff -classifications "weka.classifiers.evaluation.output.prediction.CSV -use-tab -p first-last -file data/anger-pred.csv" -F "weka.filters.MultiFilter -F \"weka.filters.unsupervised.attribute.TweetToEmbeddingsFeatureVector -I 2 -B wekafiles/packages/AffectiveTweets/resources/w2v.twitter.edinburgh.100d.csv.gz -S 0 -K 15 -L -O\" -F \"weka.filters.unsupervised.attribute.TweetToLexiconFeatureVector -I 2 -A -D -F -H -J -L -N -P -Q -R -T -U -O\" -F \"weka.filters.unsupervised.attribute.TweetToSentiStrengthFeatureVector -I 2 -U -O\" -F \"weka.filters.unsupervised.attribute.Reorder -R 5-last,4\"" -W weka.classifiers.functions.LibLINEAR -- -S 12 -C 1.0 -E 0.001 -B 1.0 -L 0.1 -I 1000



General options:

-h or -help
    Output help information.
-synopsis or -info
    Output synopsis for classifier (use in conjunction  with -h)
-t <name of training file>
    Sets training file.
-T <name of test file>
    Sets test file. If missing, a cross-validation will be performed
    on the training data.
-c <class index>
    Sets index of class attribute (default: last).
-x <number of folds>
    Sets number of folds for cross-validation (default: 10).
-no-cv
    Do not perform any cross validation.
-force-batch-training
    Always train classifier in batch mode, never incrementally.
-split-percentage <percentage>
    Sets the percentage for the train/test set split, e.g., 66.
-preserve-order
    Preserves the order in the percentage split.
-s <random number seed>
    Sets random number seed for cross-validation or percentage split
    (default: 1).
-m <name of file with cost matrix>
    Sets file with cost matrix.
-toggle <comma-separated list of evaluation metric names>
    Comma separated list of metric names to toggle in the output.
    All metrics are output by default with the exception of 'Coverage' and 'Region size'.
    Available metrics:
    Correct,Incorrect,Kappa,Total cost,Average cost,KB relative,KB information,
    Correlation,Complexity 0,Complexity scheme,Complexity improvement,
    MAE,RMSE,RAE,RRSE,Coverage,Region size,TP rate,FP rate,Precision,Recall,
    F-measure,MCC,ROC area,PRC area,kendall,spearman
-l <name of input file>
    Sets model input file. In case the filename ends with '.xml',
    a PMML file is loaded or, if that fails, options are loaded
    from the XML file.
-d <name of output file>
    Sets model output file. In case the filename ends with '.xml',
    only the options are saved to the XML file, not the model.
-v
    Outputs no statistics for training data.
-o
    Outputs statistics only, not the classifier.
-do-not-output-per-class-statistics
    Do not output statistics for each class.
-k
    Outputs information-theoretic statistics.
-classifications "weka.classifiers.evaluation.output.prediction.AbstractOutput + options"
    Uses the specified class for generating the classification output.
    E.g.: weka.classifiers.evaluation.output.prediction.PlainText
-p range
    Outputs predictions for test instances (or the train instances if
    no test instances provided and -no-cv is used), along with the
    attributes in the specified range (and nothing else).
    Use '-p 0' if no attributes are desired.
    Deprecated: use "-classifications ..." instead.
-distribution
    Outputs the distribution instead of only the prediction
    in conjunction with the '-p' option (only nominal classes).
    Deprecated: use "-classifications ..." instead.
-r
    Only outputs cumulative margin distribution.
-g
    Only outputs the graph representation of the classifier.
-xml filename | xml-string
    Retrieves the options from the XML-data instead of the command line.
-threshold-file <file>
    The file to save the threshold data to.
    The format is determined by the extensions, e.g., '.arff' for ARFF
    format or '.csv' for CSV.
-threshold-label <label>
    The class label to determine the threshold data for
    (default is the first label)
-no-predictions
    Turns off the collection of predictions in order to conserve memory.

Options specific to weka.classifiers.meta.FilteredClassifier:

-F <filter specification>
    Full class name of filter to use, followed
    by filter options.
    eg: "weka.filters.unsupervised.attribute.Remove -V -R 1,2"
-W
    Full name of base classifier.
    (default: weka.classifiers.trees.J48)
-output-debug-info
    If set, classifier is run in debug mode and
    may output additional info to the console
-do-not-check-capabilities
    If set, classifier capabilities are not checked before classifier is built
    (use with caution).
-num-decimal-places
    The number of decimal places for the output of numbers in the model (default 2).
-batch-size
    The desired batch size for batch prediction  (default 100).

Options specific to classifier weka.classifiers.trees.J48:

-U
    Use unpruned tree.
-O
    Do not collapse tree.
-C <pruning confidence>
    Set confidence threshold for pruning.
    (default 0.25)
-M <minimum number of instances>
    Set minimum number of instances per leaf.
    (default 2)
-R
    Use reduced error pruning.
-N <number of folds>
    Set number of folds for reduced error
    pruning. One fold is used as pruning set.
    (default 3)
-B
    Use binary splits only.
-S
    Do not perform subtree raising.
-L
    Do not clean up after the tree has been built.
-A
    Laplace smoothing for predicted probabilities.
-J
    Do not use MDL correction for info gain on numeric attributes.
-Q <seed>
    Seed for random data shuffling (default 1).
-doNotMakeSplitPointActualValue
    Do not make split point actual value.
-output-debug-info
    If set, classifier is run in debug mode and
    may output additional info to the console
-do-not-check-capabilities
    If set, classifier capabilities are not checked before classifier is built
    (use with caution).
-num-decimal-places
    The number of decimal places for the output of numbers in the model (default 2).
-batch-size
    The desired batch size for batch prediction  (default 100).

Options specific to filter weka.filters.supervised.attribute.Discretize:

-R <col1,col2-col4,...>
    Specifies list of columns to Discretize. First and last are valid indexes.
    (default none)
-V
    Invert matching sense of column indexes.
-D
    Output binary attributes for discretized attributes.
-Y
    Use bin numbers rather than ranges for discretized attributes.
-E
    Use better encoding of split point for MDL.
-K
    Use Kononenko's MDL criterion.
-precision <integer>
    Precision for bin boundary labels.
    (default = 6 decimal places).


